{"ast":null,"code":"var _jsxFileName = \"/Users/anishumar/Desktop/react-firebase-chat/src/App.js\";\nimport './App.css';\nimport React, { useState, useRef, useEffect } from 'react';\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithPopup, signOut as firebaseSignOut } from 'firebase/auth';\nimport { GoogleAuthProvider } from 'firebase/auth';\nimport { getFirestore, collection, query, orderBy, addDoc, serverTimestamp } from 'firebase/firestore';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore'; // Firebase configuration\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD7K1pgnmYOsvZNZ2NrXXa1u4gfVl2ltF0\",\n  authDomain: \"superchat-bfdc0.firebaseapp.com\",\n  projectId: \"superchat-bfdc0\",\n  storageBucket: \"superchat-bfdc0.appspot.com\",\n  messagingSenderId: \"1036790184900\",\n  appId: \"1:1036790184900:web:b5da3e19005c2bcada0291\",\n  measurementId: \"G-N12164VTE2\"\n}; // Initialize Firebase\n\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst firestore = getFirestore(app);\n\nfunction App() {\n  const [user] = useAuthState(auth);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SignOut, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, user ? /*#__PURE__*/React.createElement(ChatRoom, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(SignIn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 32\n    }\n  })));\n}\n\nfunction SignIn() {\n  const signInWithGoogle = () => {\n    const provider = new GoogleAuthProvider();\n    signInWithPopup(auth, provider);\n  };\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    onClick: signInWithGoogle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, \"Sign in with Google\");\n}\n\nfunction SignOut() {\n  return auth.currentUser && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => firebaseSignOut(auth),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, \"Sign Out\");\n}\n\nfunction ChatRoom() {\n  const dummy = useRef();\n  const messagesRef = collection(firestore, 'messages');\n  const q = query(messagesRef, orderBy('createdAt'));\n  const [messages] = useCollectionData(q, {\n    idField: 'id'\n  });\n  const [formValue, setFormValue] = useState('');\n  useEffect(() => {\n    var _dummy$current;\n\n    (_dummy$current = dummy.current) === null || _dummy$current === void 0 ? void 0 : _dummy$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  const sendMessage = async e => {\n    e.preventDefault();\n    const {\n      uid,\n      photoURL\n    } = auth.currentUser;\n    await addDoc(messagesRef, {\n      text: formValue,\n      createdAt: serverTimestamp(),\n      uid,\n      photoURL\n    });\n    setFormValue('');\n    dummy.current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, messages && messages.map(msg => /*#__PURE__*/React.createElement(ChatMessage, {\n    key: msg.id,\n    message: msg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 42\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    ref: dummy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: formValue,\n    onChange: e => setFormValue(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Send\")));\n}\n\nfunction ChatMessage(props) {\n  const {\n    text,\n    uid,\n    photoURL\n  } = props.message;\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `message ${messageClass}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: photoURL,\n    alt: \"Avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, text));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/anishumar/Desktop/react-firebase-chat/src/App.js"],"names":["React","useState","useRef","useEffect","initializeApp","getAuth","signInWithPopup","signOut","firebaseSignOut","GoogleAuthProvider","getFirestore","collection","query","orderBy","addDoc","serverTimestamp","useAuthState","useCollectionData","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","auth","firestore","App","user","SignIn","signInWithGoogle","provider","SignOut","currentUser","ChatRoom","dummy","messagesRef","q","messages","idField","formValue","setFormValue","current","scrollIntoView","behavior","sendMessage","e","preventDefault","uid","photoURL","text","createdAt","map","msg","id","target","value","ChatMessage","props","message","messageClass"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { useState, useRef, useEffect } from 'react';\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithPopup, signOut as firebaseSignOut } from 'firebase/auth';\nimport { GoogleAuthProvider } from 'firebase/auth';\nimport { getFirestore, collection, query, orderBy, addDoc, serverTimestamp } from 'firebase/firestore';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\n// Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD7K1pgnmYOsvZNZ2NrXXa1u4gfVl2ltF0\",\n  authDomain: \"superchat-bfdc0.firebaseapp.com\",\n  projectId: \"superchat-bfdc0\",\n  storageBucket: \"superchat-bfdc0.appspot.com\",\n  messagingSenderId: \"1036790184900\",\n  appId: \"1:1036790184900:web:b5da3e19005c2bcada0291\",\n  measurementId: \"G-N12164VTE2\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst firestore = getFirestore(app);\n\nfunction App() {\n  const [user] = useAuthState(auth);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <SignOut />\n      </header>\n\n      <section>\n        {user ? <ChatRoom /> : <SignIn />}\n      </section>\n    </div>\n  );\n}\n\nfunction SignIn() {\n  const signInWithGoogle = () => {\n    const provider = new GoogleAuthProvider();\n    signInWithPopup(auth, provider);\n  };\n\n  return (\n    <button onClick={signInWithGoogle}>Sign in with Google</button>\n  );\n}\n\nfunction SignOut() {\n  return auth.currentUser && (\n    <button onClick={() => firebaseSignOut(auth)}>Sign Out</button>\n  );\n}\n\nfunction ChatRoom() {\n  const dummy = useRef();\n  const messagesRef = collection(firestore, 'messages');\n  const q = query(messagesRef, orderBy('createdAt'));\n  const [messages] = useCollectionData(q, { idField: 'id' });\n  const [formValue, setFormValue] = useState('');\n\n  useEffect(() => {\n    dummy.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n    const { uid, photoURL } = auth.currentUser;\n\n    await addDoc(messagesRef, {\n      text: formValue,\n      createdAt: serverTimestamp(),\n      uid,\n      photoURL\n    });\n\n    setFormValue('');\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  return (\n    <>\n      <main>\n        {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n        <div ref={dummy}></div>\n      </main>\n\n      <form onSubmit={sendMessage}>\n        <input value={formValue} onChange={(e) => setFormValue(e.target.value)} />\n        <button type=\"submit\">Send</button>\n      </form>\n    </>\n  );\n}\n\nfunction ChatMessage(props) {\n  const { text, uid, photoURL } = props.message;\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n\n  return (\n    <div className={`message ${messageClass}`}>\n      <img src={photoURL} alt=\"Avatar\" />\n      <p>{text}</p>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}